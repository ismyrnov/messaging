republish: false
spring:
  cloud:
    stream:
      function:
        definition: queue1Sink;queue2Sink;failedSink;deadletterSink
      bindings:
        queue1Sink-in-0:
          consumer:
            # disable in-process retry, by default it's 3 attempts
            max-attempts: 1
        deadletterSink-in-0:
          destination: deadletter-exchange
          group: deadletter-queue
      rabbit:
        bindings:
          queue1Sink-in-0:
            consumer:
              ttl: 5000
              maxLength: 5
              autoBindDlq: true
              dlq-ttl: 5000
              overflowBehavior: reject-publish-dlx
              deadLetterExchange: retry-exchange
              deadLetterQueueName: retry-queue
              republishToDlq: true
              # after retries, use a destination source routing key
              dlqDeadLetterEexchange:
          queue2Sink-in-0:
            consumer:
              autoBindDlq: true
              dlq-ttl: 5000
              overflowBehavior: reject-publish-dlx
              deadLetterExchange: retry-exchange
              deadLetterQueueName: retry-queue
              republishToDlq: true
              dlqDeadLetterExchange:
          failedSink-in-0:
            consumer:
              exchangeType: topic
              queueNameGroupOnly: true
              requeueRejected: true
          deadletterSink-in-0:
            consumer:
              exchangeType: topic
              queueNameGroupOnly: true
              requeueRejected: true
          source-out-0:
            producer:
              exchangeType: topic
              routingKeyExpression: headers['myRoutingKeyHeaderName']
          failed-out-0:
            producer:
              exchangeType: topic


